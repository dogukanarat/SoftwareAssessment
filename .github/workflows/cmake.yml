name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v3
      
    - name: Confgure and Build
      run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/Binaries/${{env.BUILD_TYPE}}/Output -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG=${{github.workspace}}/Binaries/${{env.BUILD_TYPE}}/Intermediate -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_OSX_ARCHITECTURES=x86_64 -H./ -B${{github.workspace}}/Binaries/${{env.BUILD_TYPE}}/Intermediate -G Ninja

    - name: Install
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/Binaries/${{env.BUILD_TYPE}}/Intermediate --target all install

    - name: Test
      working-directory: ${{github.workspace}}/Binaries/${{env.BUILD_TYPE}}/Intermediate
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
